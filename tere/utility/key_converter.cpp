#include <utility/key_converter.h>

std::string keyToString(sf::Keyboard::Key key)
{
    std::string returnable;
    switch (key)
    {
        case sf::Keyboard::Unknown  : returnable = "Unknown"; break;
        case sf::Keyboard::A        : returnable = "A"; break;
        case sf::Keyboard::B        : returnable = "B"; break;
        case sf::Keyboard::C        : returnable = "C"; break;
        case sf::Keyboard::D        : returnable = "D"; break;
        case sf::Keyboard::E        : returnable = "E"; break;
        case sf::Keyboard::F        : returnable = "F"; break;
        case sf::Keyboard::G        : returnable = "G"; break;
        case sf::Keyboard::H        : returnable = "H"; break;
        case sf::Keyboard::I        : returnable = "I"; break;
        case sf::Keyboard::J        : returnable = "J"; break;
        case sf::Keyboard::K        : returnable = "K"; break;
        case sf::Keyboard::L        : returnable = "L"; break;
        case sf::Keyboard::M        : returnable = "M"; break;
        case sf::Keyboard::N        : returnable = "N"; break;
        case sf::Keyboard::O        : returnable = "O"; break;
        case sf::Keyboard::P        : returnable = "P"; break;
        case sf::Keyboard::Q        : returnable = "Q"; break;
        case sf::Keyboard::R        : returnable = "R"; break;
        case sf::Keyboard::S        : returnable = "S"; break;
        case sf::Keyboard::T        : returnable = "T"; break;
        case sf::Keyboard::U        : returnable = "U"; break;
        case sf::Keyboard::V        : returnable = "V"; break;
        case sf::Keyboard::W        : returnable = "W"; break;
        case sf::Keyboard::X        : returnable = "X"; break;
        case sf::Keyboard::Y        : returnable = "Y"; break;
        case sf::Keyboard::Z        : returnable = "Z"; break;
        case sf::Keyboard::Num0     : returnable = "Num0"; break;
        case sf::Keyboard::Num1     : returnable = "Num1"; break;
        case sf::Keyboard::Num2     : returnable = "Num2"; break;
        case sf::Keyboard::Num3     : returnable = "Num3"; break;
        case sf::Keyboard::Num4     : returnable = "Num4"; break;
        case sf::Keyboard::Num5     : returnable = "Num5"; break;
        case sf::Keyboard::Num6     : returnable = "Num6"; break;
        case sf::Keyboard::Num7     : returnable = "Num7"; break;
        case sf::Keyboard::Num8     : returnable = "Num8"; break;
        case sf::Keyboard::Num9     : returnable = "Num9"; break;
        case sf::Keyboard::Escape   : returnable = "Escape"; break;
        case sf::Keyboard::LControl : returnable = "Left Control"; break;
        case sf::Keyboard::LShift   : returnable = "Left Shift"; break;
        case sf::Keyboard::LAlt     : returnable = "Left Alt"; break;
        case sf::Keyboard::LSystem  : returnable = "Left System"; break;
        case sf::Keyboard::RControl : returnable = "Right Control"; break;
        case sf::Keyboard::RShift   : returnable = "Right Shift"; break;
        case sf::Keyboard::RAlt     : returnable = "Right Alt"; break;
        case sf::Keyboard::RSystem  : returnable = "Right System"; break;
        case sf::Keyboard::Menu     : returnable = "Menu"; break;
        case sf::Keyboard::LBracket : returnable = "Left Bracket"; break;
        case sf::Keyboard::RBracket : returnable = "Right Bracket"; break;
        case sf::Keyboard::SemiColon: returnable = ";"; break;
        case sf::Keyboard::Comma    : returnable = ","; break;
        case sf::Keyboard::Period   : returnable = "."; break;
        case sf::Keyboard::Quote    : returnable = "\""; break;
        case sf::Keyboard::Slash    : returnable = "/"; break;
        case sf::Keyboard::BackSlash: returnable = "\\"; break;
        case sf::Keyboard::Tilde    : returnable = "~"; break;
        case sf::Keyboard::Equal    : returnable = "="; break;
        case sf::Keyboard::Dash     : returnable = "-"; break;
        case sf::Keyboard::Space    : returnable = "Space"; break;
        case sf::Keyboard::Return   : returnable = "Return"; break;
        case sf::Keyboard::BackSpace: returnable = "Backspace"; break;
        case sf::Keyboard::Tab      : returnable = "Tab"; break;
        case sf::Keyboard::PageUp   : returnable = "PageUp"; break;
        case sf::Keyboard::PageDown : returnable = "PageDown"; break;
        case sf::Keyboard::End      : returnable = "End"; break;
        case sf::Keyboard::Home     : returnable = "Home"; break;
        case sf::Keyboard::Insert   : returnable = "Insert"; break;
        case sf::Keyboard::Delete   : returnable = "Delete"; break;
        case sf::Keyboard::Add      : returnable = "Add"; break;
        case sf::Keyboard::Subtract : returnable = "Subtract"; break;
        case sf::Keyboard::Multiply : returnable = "Multiply"; break;
        case sf::Keyboard::Divide   : returnable = "Divide"; break;
        case sf::Keyboard::Left     : returnable = "Left"; break;
        case sf::Keyboard::Right    : returnable = "Right"; break;
        case sf::Keyboard::Up       : returnable = "Up"; break;
        case sf::Keyboard::Down     : returnable = "Down"; break;
        case sf::Keyboard::Numpad0  : returnable = "Numpad0"; break;
        case sf::Keyboard::Numpad1  : returnable = "Numpad1"; break;
        case sf::Keyboard::Numpad2  : returnable = "Numpad2"; break;
        case sf::Keyboard::Numpad3  : returnable = "Numpad3"; break;
        case sf::Keyboard::Numpad4  : returnable = "Numpad4"; break;
        case sf::Keyboard::Numpad5  : returnable = "Numpad5"; break;
        case sf::Keyboard::Numpad6  : returnable = "Numpad6"; break;
        case sf::Keyboard::Numpad7  : returnable = "Numpad7"; break;
        case sf::Keyboard::Numpad8  : returnable = "Numpad8"; break;
        case sf::Keyboard::Numpad9  : returnable = "Numpad9"; break;
        case sf::Keyboard::F1       : returnable = "F1"; break;
        case sf::Keyboard::F2       : returnable = "F2"; break;
        case sf::Keyboard::F3       : returnable = "F3"; break;
        case sf::Keyboard::F4       : returnable = "F4"; break;
        case sf::Keyboard::F5       : returnable = "F5"; break;
        case sf::Keyboard::F6       : returnable = "F6"; break;
        case sf::Keyboard::F7       : returnable = "F7"; break;
        case sf::Keyboard::F8       : returnable = "F8"; break;
        case sf::Keyboard::F9       : returnable = "F9"; break;
        case sf::Keyboard::F10      : returnable = "F10"; break;
        case sf::Keyboard::F11      : returnable = "F11"; break;
        case sf::Keyboard::F12      : returnable = "F12"; break;
        case sf::Keyboard::F13      : returnable = "F13"; break;
        case sf::Keyboard::F14      : returnable = "F14"; break;
        case sf::Keyboard::F15      : returnable = "F15"; break;
        case sf::Keyboard::Pause    : returnable = "Pause"; break;
        case sf::Keyboard::KeyCount : returnable = "KeyCount"; break;
    }
    return returnable;
}


sf::Keyboard::Key stringToKey(std::string key)
{
    sf::Keyboard::Key returnable = sf::Keyboard::Unknown;

    if (key == "A")                         returnable = sf::Keyboard::A;
    else if (key == "B")                    returnable = sf::Keyboard::B;
    else if (key == "C")                    returnable = sf::Keyboard::C;
    else if (key == "D")                    returnable = sf::Keyboard::D;
    else if (key == "E")                    returnable = sf::Keyboard::E;
    else if (key == "F")                    returnable = sf::Keyboard::F;
    else if (key == "G")                    returnable = sf::Keyboard::G;
    else if (key == "H")                    returnable = sf::Keyboard::H;
    else if (key == "I")                    returnable = sf::Keyboard::I;
    else if (key == "J")                    returnable = sf::Keyboard::J;
    else if (key == "K")                    returnable = sf::Keyboard::K;
    else if (key == "L")                    returnable = sf::Keyboard::L;
    else if (key == "M")                    returnable = sf::Keyboard::M;
    else if (key == "N")                    returnable = sf::Keyboard::N;
    else if (key == "O")                    returnable = sf::Keyboard::O;
    else if (key == "P")                    returnable = sf::Keyboard::P;
    else if (key == "Q")                    returnable = sf::Keyboard::Q;
    else if (key == "R")                    returnable = sf::Keyboard::R;
    else if (key == "S")                    returnable = sf::Keyboard::S;
    else if (key == "T")                    returnable = sf::Keyboard::T;
    else if (key == "U")                    returnable = sf::Keyboard::U;
    else if (key == "V")                    returnable = sf::Keyboard::V;
    else if (key == "W")                    returnable = sf::Keyboard::W;
    else if (key == "X")                    returnable = sf::Keyboard::X;
    else if (key == "Y")                    returnable = sf::Keyboard::Y;
    else if (key == "Z")                    returnable = sf::Keyboard::Z;
    else if (key == "Num0")                 returnable = sf::Keyboard::Num0;
    else if (key == "Num1")                 returnable = sf::Keyboard::Num1;
    else if (key == "Num2")                 returnable = sf::Keyboard::Num2;
    else if (key == "Num3")                 returnable = sf::Keyboard::Num3;
    else if (key == "Num4")                 returnable = sf::Keyboard::Num4;
    else if (key == "Num5")                 returnable = sf::Keyboard::Num5;
    else if (key == "Num6")                 returnable = sf::Keyboard::Num6;
    else if (key == "Num7")                 returnable = sf::Keyboard::Num7;
    else if (key == "Num8")                 returnable = sf::Keyboard::Num8;
    else if (key == "Num9")                 returnable = sf::Keyboard::Num9;
    else if (key == "Escape")               returnable = sf::Keyboard::Escape;
    else if (key == "Left Control")         returnable = sf::Keyboard::LControl;
    else if (key == "Left Shift")           returnable = sf::Keyboard::LShift;
    else if (key == "Left Alt")             returnable = sf::Keyboard::LAlt;
    else if (key == "Left System")          returnable = sf::Keyboard::LSystem;
    else if (key == "Right Control")        returnable = sf::Keyboard::RControl;
    else if (key == "Right Shift")          returnable = sf::Keyboard::RShift;
    else if (key == "Right Alt")            returnable = sf::Keyboard::RAlt;
    else if (key == "Right System")         returnable = sf::Keyboard::RSystem;
    else if (key == "Menu")                 returnable = sf::Keyboard::Menu;
    else if (key == "Left Bracket")         returnable = sf::Keyboard::LBracket;
    else if (key == "Right Bracket")        returnable = sf::Keyboard::RBracket;
    else if (key == ";")                    returnable = sf::Keyboard::SemiColon;
    else if (key == ",")                    returnable = sf::Keyboard::Comma;
    else if (key == ".")                    returnable = sf::Keyboard::Period;
    else if (key == "\"")                   returnable = sf::Keyboard::Quote;
    else if (key == "/")                    returnable = sf::Keyboard::Slash;
    else if (key == "\\")                   returnable = sf::Keyboard::BackSlash;
    else if (key == "~")                    returnable = sf::Keyboard::Tilde;
    else if (key == "=")                    returnable = sf::Keyboard::Equal;
    else if (key == "-")                    returnable = sf::Keyboard::Dash;
    else if (key == "Space")                returnable = sf::Keyboard::Space;
    else if (key == "Return")               returnable = sf::Keyboard::Return;
    else if (key == "Backspace")            returnable = sf::Keyboard::BackSpace;
    else if (key == "Tab")                  returnable = sf::Keyboard::Tab;
    else if (key == "PageUp")               returnable = sf::Keyboard::PageUp;
    else if (key == "PageDown")             returnable = sf::Keyboard::PageDown;
    else if (key == "End")                  returnable = sf::Keyboard::End;
    else if (key == "Home")                 returnable = sf::Keyboard::Home;
    else if (key == "Insert")               returnable = sf::Keyboard::Insert;
    else if (key == "Delete")               returnable = sf::Keyboard::Delete;
    else if (key == "Add")                  returnable = sf::Keyboard::Add;
    else if (key == "Subtract")             returnable = sf::Keyboard::Subtract;
    else if (key == "Multiply")             returnable = sf::Keyboard::Multiply;
    else if (key == "Divide")               returnable = sf::Keyboard::Divide;
    else if (key == "Left")                 returnable = sf::Keyboard::Left;
    else if (key == "Right")                returnable = sf::Keyboard::Right;
    else if (key == "Up")                   returnable = sf::Keyboard::Up;
    else if (key == "Down")                 returnable = sf::Keyboard::Down;
    else if (key == "Numpad0")              returnable = sf::Keyboard::Numpad0;
    else if (key == "Numpad1")              returnable = sf::Keyboard::Numpad1;
    else if (key == "Numpad2")              returnable = sf::Keyboard::Numpad2;
    else if (key == "Numpad3")              returnable = sf::Keyboard::Numpad3;
    else if (key == "Numpad4")              returnable = sf::Keyboard::Numpad4;
    else if (key == "Numpad5")              returnable = sf::Keyboard::Numpad5;
    else if (key == "Numpad6")              returnable = sf::Keyboard::Numpad6;
    else if (key == "Numpad7")              returnable = sf::Keyboard::Numpad7;
    else if (key == "Numpad8")              returnable = sf::Keyboard::Numpad8;
    else if (key == "Numpad9")              returnable = sf::Keyboard::Numpad9;
    else if (key == "F1")                   returnable = sf::Keyboard::F1;
    else if (key == "F2")                   returnable = sf::Keyboard::F2;
    else if (key == "F3")                   returnable = sf::Keyboard::F3;
    else if (key == "F4")                   returnable = sf::Keyboard::F4;
    else if (key == "F5")                   returnable = sf::Keyboard::F5;
    else if (key == "F6")                   returnable = sf::Keyboard::F6;
    else if (key == "F7")                   returnable = sf::Keyboard::F7;
    else if (key == "F8")                   returnable = sf::Keyboard::F8;
    else if (key == "F9")                   returnable = sf::Keyboard::F9;
    else if (key == "F10")                  returnable = sf::Keyboard::F10;
    else if (key == "F11")                  returnable = sf::Keyboard::F11;
    else if (key == "F12")                  returnable = sf::Keyboard::F12;
    else if (key == "F13")                  returnable = sf::Keyboard::F14;
    else if (key == "F15")                  returnable = sf::Keyboard::F15;
    else if (key == "Pause")                returnable = sf::Keyboard::Pause;
    else if (key == "KeyCount")             returnable = sf::Keyboard::KeyCount;
    else                                    returnable = sf::Keyboard::Unknown;

    return returnable;
}
